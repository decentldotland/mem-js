(function(o,n){typeof exports=="object"&&typeof module<"u"?n(exports,require("react")):typeof define=="function"&&define.amd?define(["exports","react"],n):(o=typeof globalThis<"u"?globalThis:o||self,n(o["mem-js"]={},o.React))})(this,function(o,n){"use strict";var j=Object.defineProperty;var F=(o,n,a)=>n in o?j(o,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[n]=a;var w=(o,n,a)=>(F(o,typeof n!="symbol"?n+"":n,a),a);const a="https://mem-api.com/state/",I="https://mem-api.com/transactions/",m="https://mem-testnet-bfdc8ff3530f.herokuapp.com/",d={async get(u,e={}){try{const t=await fetch(u,{method:"GET",headers:(e==null?void 0:e.headers)||{}});return{data:await t.json(),status:t.status,statusText:t.statusText,headers:t.headers,config:e}}catch(t){throw t}},async post(u,e={},t={}){try{const s=await fetch(u,{method:"POST",headers:{"Content-Type":"application/json",...t.headers},body:JSON.stringify(e)});return{data:await s.json(),status:s.status,statusText:s.statusText,headers:s.headers,config:t}}catch(s){throw s}}};class T{constructor(e){w(this,"functionId","");w(this,"state",{});e?(this.functionId=e,this.read(e)):console.warn("No functionId provided, set it via setFunctionId")}setFunctionId(e){this.functionId=e}_isFunctionId(){if(!this.functionId)throw new Error("functionId is not initialized.")}async read(e){try{let t=e||this.functionId;e||this._isFunctionId();const s=(await d.get(a+t)).data;return this.state=s,s}catch(t){console.log(t);return}}async write(e,t){try{let s=t||this.functionId;t||this._isFunctionId();const p={functionId:s,inputs:e},i=(await d.post(I,p)).data,l=i.data.execution.state;return this.state=l,i}catch(s){console.log(s);return}}async testnet(e=0,t,s,p){try{return(await d.post(m,{contractType:e,initState:t,input:s,contractSrc:p})).data}catch(i){console.log(i);return}}}const M=n.createContext({});function x(u){const e=n.useContext(M),[t,s]=n.useState(u||""),[p,i]=n.useState({});e[t]||(e[t]=new T(t)),n.useEffect(()=>{t?E(t):console.warn("No functionId provided, set it via setFunctionId")},[t]);const l=()=>{if(!t)throw new Error("functionId is not initialized.")},E=async f=>{try{let c=f||t;f||l();const r=(await d.get(a+c)).data;return i(r),r}catch(c){console.log(c);return}},v=async(f,c)=>{try{let r=c||t;c||l();const y={functionId:r,inputs:f},h=(await d.post(I,y)).data,_=h.data.execution.state;return i(_),h}catch(r){console.log(r);return}},S=async(f=0,c,r,y)=>{try{return(await d.post(m,{contractType:f,initState:c,input:r,contractSrc:y})).data}catch(h){console.log(h);return}};return{memInstance:e[t],state:p,setFunctionId:s,read:E,write:v,testnet:S}}o.MEMContext=M,o.useMEM=x,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
